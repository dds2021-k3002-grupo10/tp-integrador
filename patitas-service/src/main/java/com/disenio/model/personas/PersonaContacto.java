package com.disenio.model.personas;

import com.disenio.model.notificacion.MedioNotificacion;
import com.disenio.model.notificacion.NotificacionPorEmail;
import com.fasterxml.jackson.annotation.JsonFormat;
import lombok.Data;

import javax.persistence.*;
import java.util.Calendar;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * PersonaContacto generated by grupo 10
 */
@Entity
@Data
@Table(name = "persona_contacto", catalog = "patitas")
public class PersonaContacto implements java.io.Serializable {

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "ID_PERSONA_CONTACTO", unique = true, nullable = false)
    private Integer idPersonaContacto;

    @ManyToOne(optional = false, cascade = CascadeType.ALL, fetch = FetchType.EAGER)
    @JoinColumn(name = "ID_MEDIO_NOTIFICACION")
    private MedioNotificacion medioNotificacion;

    @Column(name = "NOMBRE", nullable = false, length = 50)
    private String nombre;

    @Column(name = "APELLIDO", nullable = false, length = 50)
    private String apellido;

    @Column(name = "EMAIL", nullable = false, length = 50)
    private String email;

    @Column(name = "TELEFONO", nullable = false)
    private Integer telefono;


    @Column(name = "FECHA_ALTA",  length = 0)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "dd/MM/yyyy HH:mm", timezone = "GMT+8")
    private Calendar fechaAlta;

    @Column(name = "FECHA_ULTIMA_MODIFICACION", length = 0)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "dd/MM/yyyy HH:mm", timezone = "GMT+8")
    private Calendar fechaUltimaModificacion;

    @Column(name = "FECHA_BAJA", length = 0)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "dd/MM/yyyy HH:mm", timezone = "GMT+8")
    private Calendar fechaBaja;

    @Column(name = "ESTADO", nullable = false, length = 1)
    private char estado;

    public PersonaContacto() {
        this.fechaAlta = Calendar.getInstance();
        this.fechaUltimaModificacion = Calendar.getInstance();
        this.estado = 'A';
        this.medioNotificacion = new NotificacionPorEmail();
    }
}



