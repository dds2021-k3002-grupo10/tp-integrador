package com.disenio.model.personas;

import com.disenio.model.mascotas.Mascota;
import com.disenio.model.mascotas.MascotaRescatada;
import com.disenio.model.usuarios.Usuario;
import com.fasterxml.jackson.annotation.JsonFormat;
import lombok.Data;

import javax.persistence.*;
import java.util.Calendar;
import java.util.List;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Persona generated by grupo 10
 */
@Entity
@Data
@Table(name = "persona", catalog = "patitas")
public class Persona implements java.io.Serializable {


    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "ID_PERSONA", unique = true, nullable = false)
    private Integer idPersona;


    @Column(name = "NOMBRE", nullable = false, length = 50)
    private String nombre;


    @Column(name = "APELLIDO", nullable = false, length = 50)
    private String apellido;


    @Column(name = "FECHA_NACIMIENTO", nullable = false, length = 0)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "dd/MM/yyyy HH:mm", timezone = "GMT+8")
    private Calendar fechaNacimiento;


    @Column(name = "FECHA_ALTA", nullable = false, length = 0)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "dd/MM/yyyy HH:mm", timezone = "GMT+8")
    private Calendar fechaAlta;


    @Column(name = "FECHA_ULTIMA_MODIFICACION", nullable = false, length = 0)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "dd/MM/yyyy HH:mm", timezone = "GMT+8")
    private Calendar fechaUltimaModificacion;


    @Column(name = "FECHA_BAJA", length = 0)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "dd/MM/yyyy HH:mm", timezone = "GMT+8")
    private Calendar fechaBaja;

    @Column(name = "ESTADO", nullable = false, length = 1)
    private char estado;

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
    private List<PersonaDocumento> personaDocumentos;

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
    private List<PersonaContacto> personaContactos;

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
    private List<PersonaDireccion> personaDireccions;

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
    private List<Mascota> mascotas;

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
    private List<Usuario> usuarios;

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
    private List<MascotaRescatada> mascotaRescatadas;

    //Funcionalidad
    public void notificar(String mensaje) {
        /*TODO magia notificacion*/
    }

    public int edad() {
        Calendar now = Calendar.getInstance();
        Calendar bdThisYear = Calendar.getInstance();
        int age = now.get(Calendar.YEAR) - this.fechaNacimiento.get(Calendar.YEAR);
        if (bdThisYear.after(now))
            age--;
        return age;
    }

    public int cantMascotas() {
        return mascotas.size();
    }

}


